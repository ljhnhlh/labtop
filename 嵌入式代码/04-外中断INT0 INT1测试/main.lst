C51 COMPILER V9.01   MAIN                                                                  10/28/2018 17:12:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: E:\stc-51\C51\BIN\C51.EXE C语言\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(main.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU International Limited ----------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   8          /* --- QQ:  800003751 -------------------------------------------------*/
   9          /* 如果要在程序中使用此代码,请在程序中注明使用了宏晶科技的资料及程序   */
  10          /*---------------------------------------------------------------------*/
  11          
  12          
  13          /*************  本程序功能说明  **************
  14          
  15          用STC的MCU的IO方式控制74HC595驱动8位数码管。
  16          
  17          用户可以修改宏来选择时钟频率.
  18          
  19          显示效果为: 左边为INT0(SW17)中断计数, 右边为INT1(SW18)中断计数, 计数范围为0~255.
  20          
  21          由于按键是机械按键, 按下有抖动, 而本例程没有去抖动处理, 所以按一次有多个计数也是正常的.
  22          
  23          ******************************************/
  24          
  25          #define MAIN_Fosc               22118400L       //定义主时钟
  26          
  27          #include        "STC15Fxxxx.H"
  28          
  29          #define DIS_DOT         0x20
  30          #define DIS_BLACK       0x10
  31          #define DIS_            0x11
  32          
  33          /****************************** 用户定义宏 ***********************************/
  34          
  35          #define         Timer0_Reload   (65536UL -(MAIN_Fosc / 1000))           //Timer 0 中断频率, 1000次/秒
  36          
  37          /*****************************************************************************/
  38          
  39          
  40          
  41          
  42          
  43          
  44          /*************  本地常量声明    **************/
  45          u8 code t_display[]={                                           //标准字库
  46          //       0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  47                  0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  48          //black  -     H    J    K        L        N    o   P    U     t    G    Q    r   M    y
  49                  0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  50                  0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};        //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  51          
  52          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};              //位码
  53          
  54          
  55          
C51 COMPILER V9.01   MAIN                                                                  10/28/2018 17:12:34 PAGE 2   

  56          /*************  IO口定义        **************/
  57          sbit    P_HC595_SER   = P4^0;   //pin 14        SER             data input
  58          sbit    P_HC595_RCLK  = P5^4;   //pin 12        RCLk    store (latch) clock
  59          sbit    P_HC595_SRCLK = P4^3;   //pin 11        SRCLK   Shift data clock
  60          
  61          /*************  本地变量声明    **************/
  62          
  63          u8      LED8[8];                //显示缓冲
  64          u8      display_index;  //显示位索引
  65          
  66          u8      INT0_cnt, INT1_cnt;     //测试用的计数变量
  67          
  68          void    delay_ms(u8 ms);
  69          void    DisplayScan(void);
  70          
  71          
  72          
  73          
  74          /********************** 主函数 ************************/
  75          void main(void)
  76          {
  77   1              u8      i;
  78   1              
  79   1              P0M1 = 0;       P0M0 = 0;       //设置为准双向口
  80   1              P1M1 = 0;       P1M0 = 0;       //设置为准双向口
  81   1              P2M1 = 0;       P2M0 = 0;       //设置为准双向口
  82   1              P3M1 = 0;       P3M0 = 0;       //设置为准双向口
  83   1              P4M1 = 0;       P4M0 = 0;       //设置为准双向口
  84   1              P5M1 = 0;       P5M0 = 0;       //设置为准双向口
  85   1              P6M1 = 0;       P6M0 = 0;       //设置为准双向口
  86   1              P7M1 = 0;       P7M0 = 0;       //设置为准双向口
  87   1      
  88   1              display_index = 0;
  89   1              for(i=0; i<8; i++)      LED8[i] = DIS_BLACK;    //全部消隐
  90   1              
  91   1              
  92   1              INT0_cnt = 0;
  93   1              INT1_cnt = 0;
  94   1      
  95   1              IE1  = 0;       //外中断1标志位
  96   1              IE0  = 0;       //外中断0标志位
  97   1              EX1 = 1;        //INT1 Enable
  98   1              EX0 = 1;        //INT0 Enable
  99   1      
 100   1              IT0 = 1;                //INT0 下降沿中断               
 101   1      //      IT0 = 0;                //INT0 上升,下降沿中断  
 102   1              IT1 = 1;                //INT1 下降沿中断               
 103   1      //      IT1 = 0;                //INT1 上升,下降沿中断  
 104   1              EA = 1;         //允许总中断
 105   1      
 106   1              while(1)
 107   1              {
 108   2                      delay_ms(1);    //延时1ms
 109   2                      DisplayScan();
 110   2              }
 111   1      } 
 112          /**********************************************/
 113          
 114          //========================================================================
 115          // 函数: void  delay_ms(unsigned char ms)
 116          // 描述: 延时函数。
 117          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
C51 COMPILER V9.01   MAIN                                                                  10/28/2018 17:12:34 PAGE 3   

 118          // 返回: none.
 119          // 版本: VER1.0
 120          // 日期: 2013-4-1
 121          // 备注: 
 122          //========================================================================
 123          void  delay_ms(u8 ms)
 124          {
 125   1           u16 i;
 126   1               do{
 127   2                    i = MAIN_Fosc / 13000;
 128   2                        while(--i)    ;   //14T per loop
 129   2           }while(--ms);
 130   1      }
 131          
 132          
 133          /********************* INT0中断函数 *************************/
 134          void INT0_int (void) interrupt INT0_VECTOR              //进中断时已经清除标志
 135          {
 136   1              INT0_cnt++;     //中断+1
 137   1      }
 138          
 139          /********************* INT1中断函数 *************************/
 140          void INT1_int (void) interrupt INT1_VECTOR              //进中断时已经清除标志
 141          {
 142   1              INT1_cnt++;     //中断+1
 143   1      }
 144          
 145          
 146          
 147          /**************** 向HC595发送一个字节函数 ******************/
 148          void Send_595(u8 dat)
 149          {               
 150   1              u8      i;
 151   1              for(i=0; i<8; i++)
 152   1              {
 153   2                      dat <<= 1;
 154   2                      P_HC595_SER   = CY;
 155   2                      P_HC595_SRCLK = 1;
 156   2                      P_HC595_SRCLK = 0;
 157   2              }
 158   1      }
 159          
 160          /********************** 显示扫描函数 ************************/
 161          void DisplayScan(void)
 162          {       
 163   1              Send_595(~T_COM[display_index]);                                //输出位码
 164   1              Send_595(t_display[LED8[display_index]]);       //输出段码
 165   1      
 166   1              P_HC595_RCLK = 1;
 167   1              P_HC595_RCLK = 0;                                                       //锁存输出数据
 168   1              if(++display_index >= 8)
 169   1              {
 170   2                      display_index = 0;      //8位结束回0
 171   2                      LED8[0] = INT0_cnt / 100;
 172   2                      LED8[1] = (INT0_cnt % 100)/10;
 173   2                      LED8[2] = INT0_cnt % 10;
 174   2                      LED8[3] = DIS_BLACK;
 175   2                      LED8[4] = DIS_BLACK;
 176   2                      LED8[5] = INT1_cnt / 100;
 177   2                      LED8[6] = (INT1_cnt % 100)/10;
 178   2                      LED8[7] = INT1_cnt % 10;
 179   2              }
C51 COMPILER V9.01   MAIN                                                                  10/28/2018 17:12:34 PAGE 4   

 180   1      }
 181          
 182          
 183          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    223    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
